var Web3 = require('web3');
var fs = require('fs');

var web3 = new Web3();

web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));

var coinbase = web3.eth.coinbase;
console.log(coinbase);
web3.eth.defaultAccount = coinbase;
var balance = web3.eth.getBalance(coinbase);
console.log(balance.toString(10));
// solidity code code
fs.readFile('smartcontracts/access-name.sol', function(err, data) {
console.log('data from solidity file');
console.log(data.toString());
  var source = data.toString();

var compiled = web3.eth.compile.solidity(source);
console.log(compiled);
var code = compiled.usernameContract.code;
console.log(code);
  // contract json abi, this is autogenerated using solc CLI
var abi = compiled.usernameContract.info.abiDefinition;
console.log('that abi ===');
console.log(abi);

var myContract;
console.log('start recall process');
	var myContract = web3.eth.contract(abi);
	var mysamplingContract = myContract.at('42f5ef33220db5ffd6a9ebf27b618a6f816b9a3a');
console.log(mysamplingContract);

  // call the contract to return data
  var returnstorage = mysamplingContract.getName();
  //var returnstoragetwo = mysamplingContract.isTokenTransferOK();
console.log('change the name of the  =====');
console.log(returnstorage);
//console.log(returnstoragetwo);
});
