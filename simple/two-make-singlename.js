var Web3 = require('web3');
var fs = require('fs');

var web3 = new Web3();

web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));

var coinbase = web3.eth.coinbase;
console.log(coinbase);
web3.eth.defaultAccount = coinbase;
var balance = web3.eth.getBalance(coinbase);
console.log(balance.toString(10));
// solidity code code
fs.readFile('smartcontracts/twoc-access-name.sol', function(err, data) {
console.log('data from solidity file');
console.log(data.toString());
  var source = data.toString();
console.log('after source');
var compiled = web3.eth.compile.solidity(source);
console.log('conmplied before');
console.log(compiled);
var code = compiled.UserCreator.code;
console.log('code layout');
console.log(code);
  // contract json abi, this is autogenerated using solc CLI
var abi = compiled.UserCreator.info.abiDefinition;
console.log('that abi ===');
console.log(abi);

var myContract;
//  var blockwatch = web3.eth.filter('latest');
//console.log(blockwatch);

  web3.eth.contract(abi).new({data: code, gas: 900000,}, function (err, contract) {

    if (err) {
console.error(err);
      return;
    }
    else if(contract.address) {
      myContract = contract;
console.log('address: ' + myContract.address);
    myContract.setliveName(null, "twojimmyLJ");


    }
  });

});
